buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
    }
}

plugins {
    id 'java'
    id 'application'
    id "org.jetbrains.kotlin.jvm" version "1.6.21"
    id "org.jetbrains.kotlin.plugin.spring" version "1.6.21"
    id 'org.springframework.boot' version '2.7.0'
    id "com.palantir.docker" version "0.33.0"
    id "io.gitlab.arturbosch.detekt" version "1.20.0"
    id "org.kravemir.gradle.sass" version "1.2.4"
    id "name.remal.check-updates" version "1.0.162"
    id 'org.unbroken-dome.test-sets' version '4.0.0'
}

sourceCompatibility = JavaVersion.VERSION_11

dependencies {

    // other projects
    implementation project(':frontend')

    // dependencies
    implementation "org.springframework.boot:spring-boot-starter-actuator:2.6.7"
    implementation "org.springframework.boot:spring-boot-starter-cache:2.6.7"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:2.6.7"
    implementation "org.springframework.boot:spring-boot-starter-mail:2.6.7"
    implementation "org.springframework.boot:spring-boot-starter-validation:2.6.7"
    implementation "org.springframework.boot:spring-boot-starter-websocket:2.6.7"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client:2.6.7"
    implementation "org.springframework.session:spring-session-core:2.6.3"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.13.3"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.13.3"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.21"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.6.21"
    implementation "org.passay:passay:1.6.1"
    implementation "commons-beanutils:commons-beanutils:1.9.4"
    implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE"
    implementation "org.webjars:bootstrap:5.1.3"
    implementation "org.springframework.boot:spring-boot-devtools:${springBootVersion}"

    constraints {
        implementation ("commons-collections:commons-collections:3.2.2") {
            because "Vulnerability: Uncontrolled Recursion vulnerability pending CVSS allocation"
        }
        implementation ("org.hibernate.validator:hibernate-validator:6.2.3.Final") {
            because "Vulnerability: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability pending CVSS allocation "
        }
        implementation ("org.hibernate:hibernate-core:5.6.4.Final") {
            because "Vulnerability: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability pending CVSS allocation "
        }
        implementation ("org.dom4j:dom4j:2.1.3") {
            because "Vulnerability: Improper Restriction of XML External Entity Reference vulnerability pending CVSS allocation"
        }
        implementation ("ch.qos.logback:logback-classic:1.2.5") {
            because "Vulnerability: Deserialization of Untrusted Data vulnerability pending CVSS allocation"
        }
        implementation ("ch.qos.logback:logback-core:1.2.5") {
            because "Vulnerability: Deserialization of Untrusted Data vulnerability pending CVSS allocation"
        }
        implementation ("org.springframework:spring-beans:5.3.18") {
            because "Vulnerability: improper Control of Generation of Code ('Code Injection') vulnerability pending CVSS allocation"
        }
        implementation ("org.springframework:spring-context:5.3.18") {
            because "Improper Handling of Case Sensitivity vulnerability pending CVSS allocation"
        }
        implementation ("org.springframework:spring-core:5.3.18") {
            because "Improper Output Neutralization for Logs vulnerability pending CVSS allocation"
        }
        implementation ("org.springframework:spring-expression::5.3.18") {
            because "Allocation of Resources Without Limits or Throttling vulnerability pending CVSS allocation "
        }
    }

    runtimeOnly 'org.postgresql:postgresql:42.3.4'

    testImplementation 'org.codehaus.groovy:groovy:3.0.10'
    testImplementation 'org.spockframework:spock-core:2.1-groovy-3.0'
    testImplementation 'org.hamcrest:hamcrest-core:2.2'

    testImplementation("org.springframework.security:spring-security-test:5.6.3") {
        exclude module: "mockito-core"
    }

    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}") {
        exclude(module: "junit")
        exclude(module: "mockito-core")
    }

    testRuntimeOnly 'net.bytebuddy:byte-buddy:1.12.10' // allows mocking of classes (in addition to interfaces)
    testRuntimeOnly 'org.objenesis:objenesis:3.2'     // allows mocking of classes without default constructor (together with ByteBuddy or CGLIB)
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    detektPlugins 'io.gitlab.arturbosch.detekt:detekt-formatting:1.20.0'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = sourceCompatibility
    }
}

springBoot {
    buildInfo()
}

detekt {
    version = "1.20.0"
    input = files("${projectDir}/src/main/kotlin")
    config = files("${projectDir}/detekt.yml") // Code style rules file.
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/detekt/detekt.html")
        }
    }
}
build.dependsOn(':frontend:buildFrontendApp', ':frontend:copyBuildArtifacts', ":migrations:build")
test { useJUnitPlatform() }
